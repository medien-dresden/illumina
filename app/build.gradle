buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:0.7.+'
    }
}

apply plugin: 'android'

repositories {
    mavenCentral()
}

if (!hasProperty("keystoreAlias")) keystoreAlias = ''
if (!hasProperty("keystorePassword")) keystorePassword = ''

if (!hasProperty("bitbucketRepositoryUser")) bitbucketRepositoryUser = ''
if (!hasProperty("bitbucketRepositoryName")) bitbucketRepositoryName = ''
if (!hasProperty("bitbucketReporterUser")) bitbucketReporterUser = ''
if (!hasProperty("bitbucketReporterPassword")) bitbucketReporterPassword = ''

android {
    compileSdkVersion 19
    buildToolsVersion "19.0.1"

    productFlavors {
        amazon {
            buildConfigField "org.codechimp.apprater.Market", "MARKET", \
                "new org.codechimp.apprater.AmazonMarket()"
        }

        google {
            buildConfigField "org.codechimp.apprater.Market", "MARKET", \
                "new org.codechimp.apprater.GoogleMarket()"
        }
    }

    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 19
        versionCode 9
        versionName "1.3.1"

        buildConfigField "String", "BITBUCKET_REPOSITORY_NAME", \
            "\"" + bitbucketRepositoryName + "\""

        buildConfigField "String", "BITBUCKET_REPOSITORY_USER", \
            "\"" + bitbucketRepositoryUser + "\""

        buildConfigField "String", "BITBUCKET_REPORTER_USER", \
            "\"" + bitbucketReporterUser + "\""

        buildConfigField "String", "BITBUCKET_REPORTER_PASSWORD", \
            "\"" + bitbucketReporterPassword + "\""
    }

    signingConfigs {
        release {
            if (hasProperty("keystoreFile")) {
                storeFile file(keystoreFile)
            }

            storePassword keystorePassword
            keyAlias keystoreAlias
            keyPassword keystorePassword
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release

            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), \
                'proguard-rules.txt'
        }
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    compile 'com.android.support:support-v4:19.0.+'
    compile 'com.android.support:appcompat-v7:19.0.+'
    compile 'com.github.codechimp-org.apprater:library:1.0.+'
    compile 'com.github.machinarius:preferencefragment:0.1.1'

    compile('ch.acra:acra:4.5.0') {
        exclude module: 'json'
    }

    compile('de.psdev.licensesdialog:licensesdialog:1.4.0') {
        exclude module: 'support-v4'
    }

    compile 'org.slf4j:slf4j-api:1.7.6',
            'com.github.tony19:logback-android-core:1.1.1-2',
            'com.github.tony19:logback-android-classic:1.1.1-2'
}
